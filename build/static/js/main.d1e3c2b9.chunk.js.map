{"version":3,"sources":["firebase.js","components/SidebarChat.js","StateProvider.js","components/Sidebar.js","axios.js","components/Chat.js","reducer.js","components/Login.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","SidebarChat","id","name","addNewChat","useState","seed","setSeed","messages","setMessages","useEffect","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","Math","floor","random","onClick","roomName","prompt","add","className","to","Avatar","src","message","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Sidebar","user","rooms","setRooms","unsubscribe","IconButton","photoURL","SearchOutlined","type","placeholder","room","axios","create","baseURL","Chat","input","setInput","roomId","useParams","setRoomName","sendMessage","e","a","preventDefault","displayName","timestamp","FieldValue","serverTimestamp","Date","length","toDate","toUTCString","FormControl","Select","variant","MenuItem","AttachFile","InsertEmoticon","onChange","target","Button","actionTypes","state","action","console","log","Login","dispatch","alt","signInWithPopup","then","result","catch","error","alert","App","channel","Pusher","cluster","subscribe","bind","newMessage","unbind_all","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d1e3c2b9.chunk.js","sourcesContent":["import firebase from 'firebase'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyC0kI1tjP9BITnQ7UX-WijmQOSHCYl8B1o\",\r\n    authDomain: \"whatsapp-clone-edaa5.firebaseapp.com\",\r\n    projectId: \"whatsapp-clone-edaa5\",\r\n    storageBucket: \"whatsapp-clone-edaa5.appspot.com\",\r\n    messagingSenderId: \"348304486559\",\r\n    appId: \"1:348304486559:web:a286178e15a17288c1b2aa\",\r\n    measurementId: \"G-GLPZ5CZWS9\"\r\n  };\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport { auth, provider };\r\nexport default db;","import { Avatar } from '@material-ui/core';\r\nimport React, { useState, useEffect } from 'react'\r\nimport '../css/SidebarChat.css';\r\nimport db from '../firebase';\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction SidebarChat({ id, name, addNewChat }) {\r\n    const [seed, setSeed] = useState(\"\")\r\n    const [messages, setMessages] = useState([])\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            db.collection('rooms')\r\n                .doc(id)\r\n                .collection('messages')\r\n                .orderBy('timestamp', 'desc')\r\n                .onSnapshot(snapshot => (\r\n                    setMessages(snapshot.docs.map((doc) => doc.data()))\r\n                ))\r\n        }\r\n    }, [id])\r\n\r\n    useEffect(() => {\r\n        setSeed(Math.floor(Math.random() * 5000))\r\n    }, [])\r\n\r\n    const createChat = () => {\r\n        const roomName = prompt(\"Please enter a name for chatroom\")\r\n\r\n        if (roomName) {\r\n            db.collection('rooms').add({\r\n                name: roomName\r\n            })\r\n        }\r\n    }\r\n\r\n    return !addNewChat ? (\r\n        <Link to={`/rooms/${id}`}>\r\n            <div className=\"sidebarChat\">\r\n                <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`}></Avatar>\r\n                <div className=\"sidebarChat__info\">\r\n                    <h2>{name}</h2>\r\n                    <p className=\"computerView\">{ messages[0]?.message }</p>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n        ) : (\r\n        <div onClick={createChat} className=\"sidebarChat\">\r\n            <h2>Add new chat</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default SidebarChat","import React, { createContext, useContext, useReducer } from \"react\";\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({ reducer, initialState, children}) => (\r\n    <StateContext.Provider value={useReducer (reducer, initialState)}>\r\n        {children}\r\n    </StateContext.Provider>\r\n)\r\n\r\nexport const useStateValue = () => useContext(StateContext);","import React, { useState, useEffect } from 'react'\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { Avatar, IconButton } from '@material-ui/core'\r\nimport { SearchOutlined } from '@material-ui/icons';\r\nimport '../css/sidebar.css'\r\nimport SidebarChat from './SidebarChat'\r\nimport db from '../firebase';\r\nimport { useStateValue } from '../StateProvider'\r\n\r\nfunction Sidebar() {\r\n    const [{ user }, dispatch] = useStateValue();\r\n    const [rooms, setRooms] = useState([])\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = db.collection('rooms').onSnapshot(snapshot => (\r\n            setRooms(snapshot.docs.map(doc => ({\r\n                id: doc.id,\r\n                data: doc.data(),\r\n            })))\r\n        ))\r\n\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebar__header\">\r\n                <IconButton>\r\n                    <Avatar src={user?.photoURL}></Avatar>\r\n                </IconButton>\r\n                <div className=\"sidebar__headerRight\">\r\n                    <IconButton>\r\n                        <DonutLargeIcon></DonutLargeIcon>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <ChatIcon></ChatIcon>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVertIcon></MoreVertIcon>\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className=\"sidebar__search\">\r\n                <div className=\"sidebar__searchContainer\">\r\n                    <SearchOutlined></SearchOutlined>\r\n                    <input type=\"text\" placeholder=\"Search chatrooms..\" />\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className=\"sidebar__chats\">\r\n            <SidebarChat addNewChat />\r\n            {rooms.map(room => (\r\n                    <SidebarChat key={room.id} id={room.id} name={room.data.name} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"http://localhost:9000\",\r\n})\r\n\r\nexport default instance","import { Avatar, FormControl, IconButton, Select, MenuItem, Button } from '@material-ui/core'\r\nimport { AttachFile, InsertEmoticon, MoreVert, SearchOutlined } from '@material-ui/icons'\r\nimport React, { useState, useEffect } from 'react'\r\nimport axios from '../axios'\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport '../css/chat.css'\r\nimport { useParams } from 'react-router-dom'\r\nimport db from '../firebase';\r\nimport { useStateValue } from '../StateProvider'\r\nimport firebase from 'firebase'\r\nimport { Link } from 'react-router-dom'\r\nimport SidebarChat from './SidebarChat'\r\n\r\nfunction Chat({ id }) {\r\n    const [{ user }, dispatch] = useStateValue();\r\n    const [input, setInput] = useState(\"\")\r\n    const [seed, setSeed] = useState(\"\");\r\n    const { roomId } = useParams();\r\n    const [roomName, setRoomName] = useState(\"\");\r\n    const [messages, setMessages] = useState([])\r\n    const [rooms, setRooms] = useState([])\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            db.collection('rooms')\r\n                .doc(id)\r\n                .collection('messages')\r\n                .orderBy('timestamp', 'desc')\r\n                .onSnapshot(snapshot => (\r\n                    setMessages(snapshot.docs.map((doc) => doc.data()))\r\n                ))\r\n        }\r\n    }, [id])\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = db.collection('rooms').onSnapshot(snapshot => (\r\n            setRooms(snapshot.docs.map(doc => ({\r\n                id: doc.id,\r\n                data: doc.data(),\r\n            })))\r\n        ))\r\n\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(roomId) {\r\n            db.collection('rooms')\r\n                .doc(roomId)\r\n                .onSnapshot((snapshot) =>\r\n                setRoomName(snapshot.data().name)\r\n                )\r\n            db.collection('rooms')\r\n                .doc(roomId)\r\n                .collection('messages')\r\n                .orderBy('timestamp', 'asc')\r\n                .onSnapshot((snapshot) =>\r\n                    setMessages(snapshot.docs.map((doc) => doc.data()))\r\n                );\r\n        }\r\n    }, [roomId])\r\n\r\n    useEffect(() => {\r\n        setSeed(Math.floor(Math.random() * 5000))\r\n    }, [roomId])\r\n\r\n    const sendMessage = async (e) => {\r\n        e.preventDefault();\r\n\r\n        db.collection('rooms').doc(roomId).collection('messages').add({\r\n            message: input,\r\n            name: user.displayName,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        })\r\n        setInput('')\r\n    }\r\n\r\n    const createChat = () => {\r\n        const roomName = prompt(\"Please enter a name for chatroom\")\r\n\r\n        if (roomName) {\r\n            db.collection('rooms').add({\r\n                name: roomName\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"chat\">\r\n            <div className=\"chat__header\">\r\n                <div className=\"avatar\">\r\n                    <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`}></Avatar>\r\n                </div>\r\n\r\n                <div className=\"chat__headerInfo\">\r\n                    <h3>{roomName}</h3>\r\n                    <p>Last Seen {\" \"}\r\n                    {new Date(\r\n                        messages[messages.length - 1]?.timestamp?.toDate()\r\n                    ).toUTCString()}\r\n                    </p>\r\n                </div>\r\n\r\n                <div className=\"chat__headerInfoMobile\">\r\n                    <IconButton>\r\n                        <Avatar src={user?.photoURL}></Avatar>\r\n                    </IconButton>\r\n                    <FormControl className=\"app__dropdown\">\r\n                        <Select variant=\"outlined\" value={roomName}>\r\n                        {rooms.map(room => (\r\n                            <MenuItem value={room.data.name}><SidebarChat key={room.id} id={room.id} name={room.data.name}/></MenuItem>\r\n                        ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <div onClick={createChat} className=\"mobileChatAdd\">\r\n                        <h2>Add new chat</h2>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"chat__headerRight\">\r\n                    <IconButton>\r\n                        <SearchOutlined></SearchOutlined>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <AttachFile></AttachFile>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVert></MoreVert>\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className=\"chat__body\">\r\n                {messages.map(message => (\r\n                    <p className={`chat__message ${message.name === user.displayName && 'chat__receiver'}`}>\r\n                    <span className=\"chat__name\">{message.name}: </span>\r\n                    {message.message}\r\n                    <span className=\"chat__timestamp\">{new Date(message.timestamp?.toDate()).toUTCString()}</span>\r\n                </p>\r\n                ))}\r\n            </div>\r\n\r\n\r\n            <div className=\"chat__footer\">\r\n                <IconButton>\r\n                    <InsertEmoticon></InsertEmoticon>\r\n                </IconButton>\r\n                <form>\r\n                    <input value={input} onChange={e => setInput(e.target.value)} placeholder=\"Type a message..\" type=\"text\"></input>\r\n                    <div className=\"form__button\">\r\n                        <Button onClick={sendMessage} type=\"submit\">Send message</Button>\r\n                    </div>\r\n                </form>\r\n                <div className=\"mic__button\">\r\n                    <IconButton>\r\n                        <MicIcon />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Chat","export const initialState = {\r\n    user: null,\r\n}\r\n\r\nexport const actionTypes = {\r\n    SET_USER: \"SET_USER\",\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n    console.log(action);\r\n    switch (action.type) {\r\n        case actionTypes.SET_USER:\r\n            return {\r\n                ...state,\r\n                user: action.user,\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer","import React from 'react'\r\nimport { Button } from '@material-ui/core'\r\nimport '../css/login.css'\r\nimport { auth, provider } from '../firebase'\r\nimport { actionTypes } from '../reducer';\r\nimport { useStateValue } from '../StateProvider'\r\n\r\nfunction Login() {\r\n    const[{}, dispatch] = useStateValue();\r\n\r\n    const signIn = () => {\r\n        auth\r\n            .signInWithPopup(provider)\r\n            .then(result => {\r\n                dispatch({\r\n                    type: actionTypes.SET_USER,\r\n                    user: result.user,\r\n                })\r\n            })\r\n            .catch(error => alert(error.message))\r\n        }\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login__container\">\r\n                <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/6b/WhatsApp.svg/150px-WhatsApp.svg.png\" alt=\"\" />\r\n                <div className=\"login__text\">\r\n                    <h1>Sign in to WhatsApp</h1>\r\n                </div>\r\n\r\n                <Button type=\"submit\" onClick={signIn}>Sign in with Google</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import './App.css';\nimport React, { useEffect, useState } from 'react'\nimport Pusher from 'pusher-js'\nimport Sidebar from './components/Sidebar'\nimport Chat from './components/Chat'\nimport axios from './axios'\nimport Login from './components/Login'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { useStateValue } from './StateProvider'\n\nfunction App() {\n  const [{ user }, dispatch] = useStateValue();\n  const [messages, setMessages] = useState([])\n\n  useEffect(() => {\n    const pusher = new Pusher('4eefa8127dd75938c541', {\n      cluster: 'us2'\n    });\n\n    const channel = pusher.subscribe(\"messages\");\n    channel.bind(\"inserted\", (newMessage) => {\n      setMessages([...messages, newMessage]);\n    });\n\n    return () => {\n      channel.unbind_all()\n      channel.unsubscribe()\n    }\n\n  }, [messages])\n\n\n  console.log(\"Messages: \", messages)\n\n  return (\n    <div className=\"app\">\n      {!user ? (\n        <Login />\n      ) : (\n\n        <div className=\"app__body\">\n        <Router>\n          <Sidebar />\n            <Switch>\n              <Route path=\"/rooms/:roomId\">\n                <Chat />\n              </Route>\n\n              <Route path=\"/\">\n                <Chat />\n              </Route>\n            </Switch>\n        </Router>\n      </div>\n    )}\n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport reducer, { initialState } from './reducer'\nimport { StateProvider } from './StateProvider'\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}